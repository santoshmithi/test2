[TestFixture]
public class ExposerServiceTests
{
    private Mock<ourDBcontext> _mockDbContext;
    private Mock<DatabaseFacade> _mockDatabase;
    private Mock<DbConnection> _mockConnection;
    private Mock<DbCommand> _mockCommand;
    private Mock<DbDataReader> _mockReader;
    private exposerservice _service;

    [SetUp]
    public void Setup()
    {
        _mockDbContext = new Mock<ourDBcontext>();
        _mockDatabase = new Mock<DatabaseFacade>(_mockDbContext.Object);
        _mockConnection = new Mock<DbConnection>();
        _mockCommand = new Mock<DbCommand>();
        _mockReader = new Mock<DbDataReader>();
        
        // Setup the Database property to return our mock DatabaseFacade
        _mockDbContext.SetupGet(x => x.Database)
                     .Returns(_mockDatabase.Object);
        
        // Setup the GetDbConnection method on our mock DatabaseFacade
        _mockDatabase.Setup(x => x.GetDbConnection())
                    .Returns(_mockConnection.Object);
        
        // Rest of the setup remains the same
        _mockConnection.Setup(x => x.CreateCommand())
                      .Returns(_mockCommand.Object);
        
        _mockCommand.Setup(x => x.ExecuteReaderAsync(It.IsAny<CancellationToken>()))
                   .ReturnsAsync(_mockReader.Object);
        
        _service = new exposerservice(_mockDbContext.Object);
    }

    // ... rest of your test methods remain the same ...
}
