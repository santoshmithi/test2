CREATE OR ALTER PROCEDURE dbo.GetBenchmarksWithDynamicExposures
    @First INT = NULL,
    @After NVARCHAR(50) = NULL,
    @RequestedExposures NVARCHAR(MAX) -- JSON: ['Country','Currency','Composition']
AS
BEGIN
    -- Parse requested exposures
    DECLARE @FetchCountry BIT = 0, @FetchCurrency BIT = 0, @FetchComposition BIT = 0;
    
    SELECT 
        @FetchCountry = CASE WHEN EXISTS (SELECT 1 FROM OPENJSON(@RequestedExposures) WHERE value = 'Country') THEN 1 ELSE 0 END,
        @FetchCurrency = CASE WHEN EXISTS (SELECT 1 FROM OPENJSON(@RequestedExposures) WHERE value = 'Currency') THEN 1 ELSE 0 END,
        @FetchComposition = CASE WHEN EXISTS (SELECT 1 FROM OPENJSON(@RequestedExposures) WHERE value = 'Composition') THEN 1 ELSE 0 END;

    -- Get paginated benchmarks
    WITH LatestBenchmarks AS (
        SELECT 
            b.*,
            ROW_NUMBER() OVER (ORDER BY b.IndexSymbol) AS RowNum
        FROM (
            SELECT 
                b.IndexSymbol,
                b.ValueDate,
                b.IndexCurrency,
                b.IndexSource,
                b.MessageGuid,
                ROW_NUMBER() OVER (
                    PARTITION BY b.IndexSymbol 
                    ORDER BY b.ValueDate DESC, b.ExecutedDateTime DESC
                ) AS LatestRow
            FROM Benchmarks b
        ) b
        WHERE b.LatestRow = 1
        AND (@After IS NULL OR b.IndexSymbol > @After)
    )
    
    -- Return benchmark data with requested exposures
    SELECT 
        b.IndexSymbol,
        b.ValueDate,
        b.IndexCurrency,
        b.IndexSource,
        b.MessageGuid,
        -- Single CASE for all Country exposure data
        CASE WHEN @FetchCountry = 1 THEN 
            (SELECT 
                co.Country AS country,
                co.Weight AS weight,
                co.ExtractedDateTime AS extractedDateTime,
                co.ImportDate AS importDate
             FROM (
                 SELECT 
                     wa.Country,
                     wa.Weight,
                     wa.ExtractedDateTime,
                     wa.ImportDate,
                     ROW_NUMBER() OVER (PARTITION BY wa.ParentSymbol, wa.ValueDate ORDER BY wa.ExtractedDateTime DESC) AS RowNum
                 FROM WeightAllocation wa
                 WHERE wa.ParentSymbol = b.IndexSymbol 
                 AND wa.ValueDate = b.ValueDate 
                 AND wa.Country IS NOT NULL
             ) co
             WHERE co.RowNum = 1
             FOR JSON PATH, WITHOUT_ARRAY_WRAPPER)
        ELSE NULL END AS CountryExposure,
        -- Single CASE for all Currency exposure data
        CASE WHEN @FetchCurrency = 1 THEN 
            (SELECT 
                cu.Currency AS currency,
                cu.Weight AS weight,
                cu.ExtractedDateTime AS extractedDateTime,
                cu.ImportDate AS importDate
             FROM (
                 SELECT 
                     wa.Currency,
                     wa.Weight,
                     wa.ExtractedDateTime,
                     wa.ImportDate,
                     ROW_NUMBER() OVER (PARTITION BY wa.ParentSymbol, wa.ValueDate ORDER BY wa.ExtractedDateTime DESC) AS RowNum
                 FROM WeightAllocation wa
                 WHERE wa.ParentSymbol = b.IndexSymbol 
                 AND wa.ValueDate = b.ValueDate 
                 AND wa.Currency IS NOT NULL
             ) cu
             WHERE cu.RowNum = 1
             FOR JSON PATH, WITHOUT_ARRAY_WRAPPER)
        ELSE NULL END AS CurrencyExposure,
        -- Single CASE for all Composition data
        CASE WHEN @FetchComposition = 1 THEN 
            (SELECT 
                cp.Sector AS sector,
                cp.Industry AS industry,
                cp.ExtractedDateTime AS extractedDateTime
             FROM (
                 SELECT 
                     c.Sector,
                     c.Industry,
                     c.ExtractedDateTime,
                     ROW_NUMBER() OVER (PARTITION BY c.ParentSymbol, c.ValueDate ORDER BY c.ExtractedDateTime DESC) AS RowNum
                 FROM Composition c
                 WHERE c.ParentSymbol = b.IndexSymbol 
                 AND c.ValueDate = b.ValueDate
             ) cp
             WHERE cp.RowNum = 1
             FOR JSON PATH, WITHOUT_ARRAY_WRAPPER)
        ELSE NULL END AS CompositionExposure
    FROM (
        SELECT * FROM LatestBenchmarks 
        WHERE @First IS NULL OR RowNum <= @First
    ) b
    ORDER BY b.IndexSymbol;
END
